name: Development Docker Image CI/CD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]


jobs:

  test:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v1
    - name: Run Django tests
      run: |
        python3 set_example_env.py
        pip3 install -r requirements.txt
        python3 manage.py collectstatic
        python3 manage.py test

  build:
    needs: test
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: |
        docker login -u gitlab-ci-token -p ${{ secrets.GITLAB_TOKEN }} ${{ secrets.GITLAB_URL }}
        docker build . --file Dockerfile --tag ${{ secrets.GITLAB_IMAGE }}:$GITHUB_RUN_ID
        docker push ${{ secrets.GITLAB_IMAGE }}:$GITHUB_RUN_ID

  deploy:
    needs: [ test, build ]
    runs-on: self-hosted
    environment:
      name: development
      url: https://dev.foodate.ru
    steps:
      - uses: actions/checkout@v1
      - name: Deploy to dev.foodate.ru
        run: |
          docker login -u gitlab-ci-token -p ${{ secrets.GITLAB_TOKEN }} ${{ secrets.GITLAB_URL }}
          docker pull ${{ secrets.GITLAB_IMAGE }}:$GITHUB_RUN_ID
          docker rm -f dev.foodate || true
          docker run -d -p 446:446 --name dev.foodate \
          --env DEBUG=${{ secrets.DEBUG }} \
          --env SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}' \
          --env HOST=${{ secrets.HOST }} \
          --env SCHEME=${{ secrets.SCHEME }} \
          --env EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} \
          --env EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} \
          -v ${{ secrets.DB_ROOT }}:/code/db.sqlite3 \
          -v ${{ secrets.STATIC_ROOT }}:/code/www/static \
          -v ${{ secrets.MEDIA_ROOT }}:/code/www/uploads \
          ${{ secrets.GITLAB_IMAGE }}:$GITHUB_RUN_ID
